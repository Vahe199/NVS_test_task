{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchUsers } from \"./ActionCreators\";\nconst initialState = {\n  cat: [],\n  isLoading: false,\n  error: '',\n  limit: 0\n};\nexport const catSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    increment(state, action) {\n      state.limit += action.payload;\n    }\n\n  },\n  extraReducers: {\n    [fetchUsers.pending.type]: state => {\n      state.isLoading = true;\n    },\n    [fetchUsers.fulfilled.type]: (state, action) => {\n      state.isLoading = false;\n      state.error = '';\n      state.cat = action.payload;\n    },\n    [fetchUsers.rejected.type]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  increment\n} = catSlice.actions;\nexport default catSlice.reducer;","map":{"version":3,"names":["createSlice","fetchUsers","initialState","cat","isLoading","error","limit","catSlice","name","reducers","increment","state","action","payload","extraReducers","pending","type","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/Doc/Desktop/text_task/src/store/reducers/CatSlice.ts"],"sourcesContent":["import {ICat} from \"../types/ICat\";\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {fetchUsers} from \"./ActionCreators\";\n\ninterface CatState {\n    cat: ICat[];\n    isLoading: boolean;\n    error: string;\n    limit:number\n}\n\nconst initialState: CatState = {\n    cat: [],\n    isLoading: false,\n    error: '',\n    limit:0\n}\n\nexport const catSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        increment(state, action: PayloadAction<number>) {\n            state.limit += action.payload\n        }\n    },\n    extraReducers: {\n        [fetchUsers.pending.type]: (state) => {\n            state.isLoading = true;\n        },\n        [fetchUsers.fulfilled.type]: (state, action: PayloadAction<ICat[]>) => {\n            state.isLoading = false;\n            state.error = '';\n            state.cat = action.payload\n        },\n        [fetchUsers.rejected.type]: (state, action: PayloadAction<string>) => {\n            state.isLoading = false;\n            state.error = action.payload;\n\n        }\n    }\n})\nexport const {increment} = catSlice.actions;\nexport default catSlice.reducer;\n\n"],"mappings":"AACA,SAAQA,WAAR,QAAyC,kBAAzC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AASA,MAAMC,YAAsB,GAAG;EAC3BC,GAAG,EAAE,EADsB;EAE3BC,SAAS,EAAE,KAFgB;EAG3BC,KAAK,EAAE,EAHoB;EAI3BC,KAAK,EAAC;AAJqB,CAA/B;AAOA,OAAO,MAAMC,QAAQ,GAAGP,WAAW,CAAC;EAChCQ,IAAI,EAAE,MAD0B;EAEhCN,YAFgC;EAGhCO,QAAQ,EAAE;IACNC,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAuC;MAC5CD,KAAK,CAACL,KAAN,IAAeM,MAAM,CAACC,OAAtB;IACH;;EAHK,CAHsB;EAQhCC,aAAa,EAAE;IACX,CAACb,UAAU,CAACc,OAAX,CAAmBC,IAApB,GAA4BL,KAAD,IAAW;MAClCA,KAAK,CAACP,SAAN,GAAkB,IAAlB;IACH,CAHU;IAIX,CAACH,UAAU,CAACgB,SAAX,CAAqBD,IAAtB,GAA6B,CAACL,KAAD,EAAQC,MAAR,KAA0C;MACnED,KAAK,CAACP,SAAN,GAAkB,KAAlB;MACAO,KAAK,CAACN,KAAN,GAAc,EAAd;MACAM,KAAK,CAACR,GAAN,GAAYS,MAAM,CAACC,OAAnB;IACH,CARU;IASX,CAACZ,UAAU,CAACiB,QAAX,CAAoBF,IAArB,GAA4B,CAACL,KAAD,EAAQC,MAAR,KAA0C;MAClED,KAAK,CAACP,SAAN,GAAkB,KAAlB;MACAO,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACC,OAArB;IAEH;EAbU;AARiB,CAAD,CAA5B;AAwBP,OAAO,MAAM;EAACH;AAAD,IAAcH,QAAQ,CAACY,OAA7B;AACP,eAAeZ,QAAQ,CAACa,OAAxB"},"metadata":{},"sourceType":"module"}